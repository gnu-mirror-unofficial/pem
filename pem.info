This is pem.info, produced by makeinfo version 4.12 from pem.texi.

This file documents the `pem-0.7.5' command, to help you keep track of
your personal income and daily expenses.

     Copyright (C) 2007 2008 2009 Prasad J Pandit

     Permission is granted to make and distribute verbatim copies of
this manual, provided the copyright notice and this permission notice
are preserved on all copies.

INFO-DIR-SECTION Individual utilities
START-INFO-DIR-ENTRY
* pem: (pem).                                   Personal expenses manager.
END-INFO-DIR-ENTRY


File: pem.info,  Node: Top,  Next: Overview,  Prev: (dir),  Up: (dir)

pem-0.7.5
*********

     This file documents the `pem-0.7.5' command, to help you keep
track of your personal income and daily expenses.

     Copyright (C) 2007 2008 2009 Prasad J Pandit

     Permission is granted to make and distribute verbatim copies of
this manual, provided the copyright notice and this permission notice
are preserved on all copies.

* Menu:

* Overview      :: An introduction to pem
* Invoking pem  :: How to use pem
* Problems      :: Reporting bugs


File: pem.info,  Node: Overview,  Next: Invoking pem,  Prev: Top,  Up: Top

1 Overview
**********

1.1 Introduction
================

     `pem' is a console based simple utility, to help you keep track of
your personal income and expenses, in an unusually elegant manner.
Obviously, using pem is extremely simple and easy. A command of the
following form is all it takes

     $ pem "Bus ticket" 10.75

     $ pem -f myexpenses.txt Breakfast 20

     Pem, by default, stores these details in a CSV file, named after
the current month, and placed in the `~/.pem' directory under your $HOME
directory. You may also specify some other file using the `-f' option.
Also, each amount is considered as an expenditure unless indicated
otherwise by `-e' option.

1.2 Tags/Categories:
====================

     From version 0.7.4, `pem' introduced support for tags & categories
of records. You can tag an income and/or expense record as

     $ pem -c bills "Cell phone bill" 830.50

     $ pem -c 'travel fun leisure' "Trip to Goa" 4500

     These are saved with tags 'bills' & 'travel fun leisure'
respectively.  Later, you can see very useful reports showing your
category wise expense traits. Now `pem' also facilitates filtering of
records using tags and description. Note that, while filtering records,
`pem' first looks into the tags and when they don't match, goes for the
description field.  Ex. To see all your expenses on `travel', you can
say

     $ pem -s travel

     $ pem -m travel

     While the first will list all your `travel' expenses in a month;
The later will show the cumulative results for each month till date.

1.3 How `pem' happened
======================

     Well...for quite a few months I was looking for some means to get
my expenses in order. As never before, have I had a slightest clue as to
how much money do I spend in a month and what on earth do I spend it
over.  Of course there is/was nothing to bother about it, but still, I
kind of wanted to know that.

     Often, we(me & my flat mate) would contemplate about a tool which
is handy enough to use. All my Google searches failed to meet my
expectations. All that I found were some or the other heavy, loaded with
thousands of (useless)menus and buttons, GUI based accounts management
programs.

     So, on one of those late Saturday night when I was browsing the
Internet and slopping through my feeds, I started writing `pem'. And on
Monday morning I had released the first working version 0.1 of `pem'. :)


File: pem.info,  Node: Invoking pem,  Next: Problems,  Prev: Overview,  Up: Top

2 Invoking pem
**************

     `pem' can be invoked by a simple command as

     Usage: pem [OPTIONS] [<description> <amount> ...]

     Where, the OPTIONS could be zero or more of the following

`-c'
`--category <name>'
     categorise/tag your expenses

`-e'
`--earned'
     indicates income

`-f'
`--file <name>'
     specify file to be used by pem

`-s [n]'
     show daily report with total after [n] days

`-m [n]'
     show monthly report with total after [n] months

`-C'
     show category/tag-wise report

`-t'
`--total'
     show just the total

`-M'
`--month <mm>'
     select a month (01 <= mm <= 12)

`-Y'
`--year <yy>'
     select an year (00 <= yy <= 99)

`-h'
`--help'
     show this help

`-v'
`--version'
     show version information


File: pem.info,  Node: Problems,  Prev: Invoking pem,  Up: Top

3 Problems
**********

3.1 Reporting bugs
==================

     If you think you have found a bug in `pem-0.7.5', please send an
email to <pj.pandit-AT-yahoo.co.in> and while doing so, please include
`pem-0.7.5' string in the subject line, and describe precisely about
the behaviour of `pem-0.7.5'



Tag Table:
Node: Top555
Node: Overview1107
Node: Invoking pem3609
Node: Problems4452

End Tag Table
